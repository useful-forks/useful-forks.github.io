{"version":3,"file":"index.js","sources":["../dist-src/generated/endpoints.js","../dist-src/version.js","../dist-src/endpoints-to-methods.js","../dist-src/index.js"],"sourcesContent":["const Endpoints = {\n    actions: {\n        addCustomLabelsToSelfHostedRunnerForOrg: [\n            \"POST /orgs/{org}/actions/runners/{runner_id}/labels\",\n        ],\n        addCustomLabelsToSelfHostedRunnerForRepo: [\n            \"POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\",\n        ],\n        addSelectedRepoToOrgSecret: [\n            \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        approveWorkflowRun: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve\",\n        ],\n        cancelWorkflowRun: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\",\n        ],\n        createOrUpdateEnvironmentSecret: [\n            \"PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\",\n        ],\n        createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\n        createOrUpdateRepoSecret: [\n            \"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\",\n        ],\n        createRegistrationTokenForOrg: [\n            \"POST /orgs/{org}/actions/runners/registration-token\",\n        ],\n        createRegistrationTokenForRepo: [\n            \"POST /repos/{owner}/{repo}/actions/runners/registration-token\",\n        ],\n        createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\n        createRemoveTokenForRepo: [\n            \"POST /repos/{owner}/{repo}/actions/runners/remove-token\",\n        ],\n        createWorkflowDispatch: [\n            \"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\",\n        ],\n        deleteActionsCacheById: [\n            \"DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}\",\n        ],\n        deleteActionsCacheByKey: [\n            \"DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}\",\n        ],\n        deleteArtifact: [\n            \"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\",\n        ],\n        deleteEnvironmentSecret: [\n            \"DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\",\n        ],\n        deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\n        deleteRepoSecret: [\n            \"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\",\n        ],\n        deleteSelfHostedRunnerFromOrg: [\n            \"DELETE /orgs/{org}/actions/runners/{runner_id}\",\n        ],\n        deleteSelfHostedRunnerFromRepo: [\n            \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\",\n        ],\n        deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n        deleteWorkflowRunLogs: [\n            \"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\",\n        ],\n        disableSelectedRepositoryGithubActionsOrganization: [\n            \"DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}\",\n        ],\n        disableWorkflow: [\n            \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable\",\n        ],\n        downloadArtifact: [\n            \"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\",\n        ],\n        downloadJobLogsForWorkflowRun: [\n            \"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\",\n        ],\n        downloadWorkflowRunAttemptLogs: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs\",\n        ],\n        downloadWorkflowRunLogs: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\",\n        ],\n        enableSelectedRepositoryGithubActionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/repositories/{repository_id}\",\n        ],\n        enableWorkflow: [\n            \"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable\",\n        ],\n        getActionsCacheList: [\"GET /repos/{owner}/{repo}/actions/caches\"],\n        getActionsCacheUsage: [\"GET /repos/{owner}/{repo}/actions/cache/usage\"],\n        getActionsCacheUsageByRepoForOrg: [\n            \"GET /orgs/{org}/actions/cache/usage-by-repository\",\n        ],\n        getActionsCacheUsageForEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/cache/usage\",\n        ],\n        getActionsCacheUsageForOrg: [\"GET /orgs/{org}/actions/cache/usage\"],\n        getAllowedActionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions/selected-actions\",\n        ],\n        getAllowedActionsRepository: [\n            \"GET /repos/{owner}/{repo}/actions/permissions/selected-actions\",\n        ],\n        getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n        getEnvironmentPublicKey: [\n            \"GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key\",\n        ],\n        getEnvironmentSecret: [\n            \"GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\",\n        ],\n        getGithubActionsDefaultWorkflowPermissionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions/workflow\",\n        ],\n        getGithubActionsDefaultWorkflowPermissionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions/workflow\",\n        ],\n        getGithubActionsDefaultWorkflowPermissionsRepository: [\n            \"GET /repos/{owner}/{repo}/actions/permissions/workflow\",\n        ],\n        getGithubActionsPermissionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions\",\n        ],\n        getGithubActionsPermissionsRepository: [\n            \"GET /repos/{owner}/{repo}/actions/permissions\",\n        ],\n        getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\n        getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\n        getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\n        getPendingDeploymentsForRun: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\",\n        ],\n        getRepoPermissions: [\n            \"GET /repos/{owner}/{repo}/actions/permissions\",\n            {},\n            { renamed: [\"actions\", \"getGithubActionsPermissionsRepository\"] },\n        ],\n        getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\n        getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n        getReviewsForRun: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals\",\n        ],\n        getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\n        getSelfHostedRunnerForRepo: [\n            \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\",\n        ],\n        getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\n        getWorkflowAccessToRepository: [\n            \"GET /repos/{owner}/{repo}/actions/permissions/access\",\n        ],\n        getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n        getWorkflowRunAttempt: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}\",\n        ],\n        getWorkflowRunUsage: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\",\n        ],\n        getWorkflowUsage: [\n            \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\",\n        ],\n        listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\n        listEnvironmentSecrets: [\n            \"GET /repositories/{repository_id}/environments/{environment_name}/secrets\",\n        ],\n        listJobsForWorkflowRun: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\",\n        ],\n        listJobsForWorkflowRunAttempt: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\",\n        ],\n        listLabelsForSelfHostedRunnerForOrg: [\n            \"GET /orgs/{org}/actions/runners/{runner_id}/labels\",\n        ],\n        listLabelsForSelfHostedRunnerForRepo: [\n            \"GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\",\n        ],\n        listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\n        listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\n        listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\n        listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\n        listRunnerApplicationsForRepo: [\n            \"GET /repos/{owner}/{repo}/actions/runners/downloads\",\n        ],\n        listSelectedReposForOrgSecret: [\n            \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n        ],\n        listSelectedRepositoriesEnabledGithubActionsOrganization: [\n            \"GET /orgs/{org}/actions/permissions/repositories\",\n        ],\n        listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\n        listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\n        listWorkflowRunArtifacts: [\n            \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\",\n        ],\n        listWorkflowRuns: [\n            \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\",\n        ],\n        listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\n        reRunJobForWorkflowRun: [\n            \"POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun\",\n        ],\n        reRunWorkflow: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun\"],\n        reRunWorkflowFailedJobs: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs\",\n        ],\n        removeAllCustomLabelsFromSelfHostedRunnerForOrg: [\n            \"DELETE /orgs/{org}/actions/runners/{runner_id}/labels\",\n        ],\n        removeAllCustomLabelsFromSelfHostedRunnerForRepo: [\n            \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\",\n        ],\n        removeCustomLabelFromSelfHostedRunnerForOrg: [\n            \"DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}\",\n        ],\n        removeCustomLabelFromSelfHostedRunnerForRepo: [\n            \"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}\",\n        ],\n        removeSelectedRepoFromOrgSecret: [\n            \"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        reviewPendingDeploymentsForRun: [\n            \"POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\",\n        ],\n        setAllowedActionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/selected-actions\",\n        ],\n        setAllowedActionsRepository: [\n            \"PUT /repos/{owner}/{repo}/actions/permissions/selected-actions\",\n        ],\n        setCustomLabelsForSelfHostedRunnerForOrg: [\n            \"PUT /orgs/{org}/actions/runners/{runner_id}/labels\",\n        ],\n        setCustomLabelsForSelfHostedRunnerForRepo: [\n            \"PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\",\n        ],\n        setGithubActionsDefaultWorkflowPermissionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/workflow\",\n        ],\n        setGithubActionsDefaultWorkflowPermissionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/workflow\",\n        ],\n        setGithubActionsDefaultWorkflowPermissionsRepository: [\n            \"PUT /repos/{owner}/{repo}/actions/permissions/workflow\",\n        ],\n        setGithubActionsPermissionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions\",\n        ],\n        setGithubActionsPermissionsRepository: [\n            \"PUT /repos/{owner}/{repo}/actions/permissions\",\n        ],\n        setSelectedReposForOrgSecret: [\n            \"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n        ],\n        setSelectedRepositoriesEnabledGithubActionsOrganization: [\n            \"PUT /orgs/{org}/actions/permissions/repositories\",\n        ],\n        setWorkflowAccessToRepository: [\n            \"PUT /repos/{owner}/{repo}/actions/permissions/access\",\n        ],\n    },\n    activity: {\n        checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\n        deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\n        deleteThreadSubscription: [\n            \"DELETE /notifications/threads/{thread_id}/subscription\",\n        ],\n        getFeeds: [\"GET /feeds\"],\n        getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\n        getThread: [\"GET /notifications/threads/{thread_id}\"],\n        getThreadSubscriptionForAuthenticatedUser: [\n            \"GET /notifications/threads/{thread_id}/subscription\",\n        ],\n        listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\n        listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\n        listOrgEventsForAuthenticatedUser: [\n            \"GET /users/{username}/events/orgs/{org}\",\n        ],\n        listPublicEvents: [\"GET /events\"],\n        listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\n        listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\n        listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\n        listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\n        listReceivedPublicEventsForUser: [\n            \"GET /users/{username}/received_events/public\",\n        ],\n        listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\n        listRepoNotificationsForAuthenticatedUser: [\n            \"GET /repos/{owner}/{repo}/notifications\",\n        ],\n        listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\n        listReposStarredByUser: [\"GET /users/{username}/starred\"],\n        listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\n        listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\n        listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\n        listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\n        markNotificationsAsRead: [\"PUT /notifications\"],\n        markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\n        markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\n        setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\n        setThreadSubscription: [\n            \"PUT /notifications/threads/{thread_id}/subscription\",\n        ],\n        starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\n        unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"],\n    },\n    apps: {\n        addRepoToInstallation: [\n            \"PUT /user/installations/{installation_id}/repositories/{repository_id}\",\n            {},\n            { renamed: [\"apps\", \"addRepoToInstallationForAuthenticatedUser\"] },\n        ],\n        addRepoToInstallationForAuthenticatedUser: [\n            \"PUT /user/installations/{installation_id}/repositories/{repository_id}\",\n        ],\n        checkToken: [\"POST /applications/{client_id}/token\"],\n        createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\n        createInstallationAccessToken: [\n            \"POST /app/installations/{installation_id}/access_tokens\",\n        ],\n        deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\n        deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\n        deleteToken: [\"DELETE /applications/{client_id}/token\"],\n        getAuthenticated: [\"GET /app\"],\n        getBySlug: [\"GET /apps/{app_slug}\"],\n        getInstallation: [\"GET /app/installations/{installation_id}\"],\n        getOrgInstallation: [\"GET /orgs/{org}/installation\"],\n        getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\n        getSubscriptionPlanForAccount: [\n            \"GET /marketplace_listing/accounts/{account_id}\",\n        ],\n        getSubscriptionPlanForAccountStubbed: [\n            \"GET /marketplace_listing/stubbed/accounts/{account_id}\",\n        ],\n        getUserInstallation: [\"GET /users/{username}/installation\"],\n        getWebhookConfigForApp: [\"GET /app/hook/config\"],\n        getWebhookDelivery: [\"GET /app/hook/deliveries/{delivery_id}\"],\n        listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\n        listAccountsForPlanStubbed: [\n            \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n        ],\n        listInstallationReposForAuthenticatedUser: [\n            \"GET /user/installations/{installation_id}/repositories\",\n        ],\n        listInstallations: [\"GET /app/installations\"],\n        listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\n        listPlans: [\"GET /marketplace_listing/plans\"],\n        listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\n        listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\n        listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\n        listSubscriptionsForAuthenticatedUserStubbed: [\n            \"GET /user/marketplace_purchases/stubbed\",\n        ],\n        listWebhookDeliveries: [\"GET /app/hook/deliveries\"],\n        redeliverWebhookDelivery: [\n            \"POST /app/hook/deliveries/{delivery_id}/attempts\",\n        ],\n        removeRepoFromInstallation: [\n            \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\",\n            {},\n            { renamed: [\"apps\", \"removeRepoFromInstallationForAuthenticatedUser\"] },\n        ],\n        removeRepoFromInstallationForAuthenticatedUser: [\n            \"DELETE /user/installations/{installation_id}/repositories/{repository_id}\",\n        ],\n        resetToken: [\"PATCH /applications/{client_id}/token\"],\n        revokeInstallationAccessToken: [\"DELETE /installation/token\"],\n        scopeToken: [\"POST /applications/{client_id}/token/scoped\"],\n        suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\n        unsuspendInstallation: [\n            \"DELETE /app/installations/{installation_id}/suspended\",\n        ],\n        updateWebhookConfigForApp: [\"PATCH /app/hook/config\"],\n    },\n    billing: {\n        getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\n        getGithubActionsBillingUser: [\n            \"GET /users/{username}/settings/billing/actions\",\n        ],\n        getGithubAdvancedSecurityBillingGhe: [\n            \"GET /enterprises/{enterprise}/settings/billing/advanced-security\",\n        ],\n        getGithubAdvancedSecurityBillingOrg: [\n            \"GET /orgs/{org}/settings/billing/advanced-security\",\n        ],\n        getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\n        getGithubPackagesBillingUser: [\n            \"GET /users/{username}/settings/billing/packages\",\n        ],\n        getSharedStorageBillingOrg: [\n            \"GET /orgs/{org}/settings/billing/shared-storage\",\n        ],\n        getSharedStorageBillingUser: [\n            \"GET /users/{username}/settings/billing/shared-storage\",\n        ],\n    },\n    checks: {\n        create: [\"POST /repos/{owner}/{repo}/check-runs\"],\n        createSuite: [\"POST /repos/{owner}/{repo}/check-suites\"],\n        get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n        getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\"],\n        listAnnotations: [\n            \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\",\n        ],\n        listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\"],\n        listForSuite: [\n            \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\",\n        ],\n        listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\"],\n        rerequestRun: [\n            \"POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest\",\n        ],\n        rerequestSuite: [\n            \"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\",\n        ],\n        setSuitesPreferences: [\n            \"PATCH /repos/{owner}/{repo}/check-suites/preferences\",\n        ],\n        update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n    },\n    codeScanning: {\n        deleteAnalysis: [\n            \"DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}\",\n        ],\n        getAlert: [\n            \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\n            {},\n            { renamedParameters: { alert_id: \"alert_number\" } },\n        ],\n        getAnalysis: [\n            \"GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}\",\n        ],\n        getCodeqlDatabase: [\n            \"GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}\",\n        ],\n        getSarif: [\"GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}\"],\n        listAlertInstances: [\n            \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n        ],\n        listAlertsForEnterprise: [\n            \"GET /enterprises/{enterprise}/code-scanning/alerts\",\n        ],\n        listAlertsForOrg: [\"GET /orgs/{org}/code-scanning/alerts\"],\n        listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\n        listAlertsInstances: [\n            \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n            {},\n            { renamed: [\"codeScanning\", \"listAlertInstances\"] },\n        ],\n        listCodeqlDatabases: [\n            \"GET /repos/{owner}/{repo}/code-scanning/codeql/databases\",\n        ],\n        listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\n        updateAlert: [\n            \"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\",\n        ],\n        uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"],\n    },\n    codesOfConduct: {\n        getAllCodesOfConduct: [\"GET /codes_of_conduct\"],\n        getConductCode: [\"GET /codes_of_conduct/{key}\"],\n    },\n    codespaces: {\n        addRepositoryForSecretForAuthenticatedUser: [\n            \"PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        addSelectedRepoToOrgSecret: [\n            \"PUT /organizations/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        codespaceMachinesForAuthenticatedUser: [\n            \"GET /user/codespaces/{codespace_name}/machines\",\n        ],\n        createForAuthenticatedUser: [\"POST /user/codespaces\"],\n        createOrUpdateOrgSecret: [\n            \"PUT /organizations/{org}/codespaces/secrets/{secret_name}\",\n        ],\n        createOrUpdateRepoSecret: [\n            \"PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\",\n        ],\n        createOrUpdateSecretForAuthenticatedUser: [\n            \"PUT /user/codespaces/secrets/{secret_name}\",\n        ],\n        createWithPrForAuthenticatedUser: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces\",\n        ],\n        createWithRepoForAuthenticatedUser: [\n            \"POST /repos/{owner}/{repo}/codespaces\",\n        ],\n        deleteForAuthenticatedUser: [\"DELETE /user/codespaces/{codespace_name}\"],\n        deleteFromOrganization: [\n            \"DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}\",\n        ],\n        deleteOrgSecret: [\n            \"DELETE /organizations/{org}/codespaces/secrets/{secret_name}\",\n        ],\n        deleteRepoSecret: [\n            \"DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\",\n        ],\n        deleteSecretForAuthenticatedUser: [\n            \"DELETE /user/codespaces/secrets/{secret_name}\",\n        ],\n        exportForAuthenticatedUser: [\n            \"POST /user/codespaces/{codespace_name}/exports\",\n        ],\n        getExportDetailsForAuthenticatedUser: [\n            \"GET /user/codespaces/{codespace_name}/exports/{export_id}\",\n        ],\n        getForAuthenticatedUser: [\"GET /user/codespaces/{codespace_name}\"],\n        getOrgPublicKey: [\"GET /organizations/{org}/codespaces/secrets/public-key\"],\n        getOrgSecret: [\"GET /organizations/{org}/codespaces/secrets/{secret_name}\"],\n        getPublicKeyForAuthenticatedUser: [\n            \"GET /user/codespaces/secrets/public-key\",\n        ],\n        getRepoPublicKey: [\n            \"GET /repos/{owner}/{repo}/codespaces/secrets/public-key\",\n        ],\n        getRepoSecret: [\n            \"GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\",\n        ],\n        getSecretForAuthenticatedUser: [\n            \"GET /user/codespaces/secrets/{secret_name}\",\n        ],\n        listDevcontainersInRepositoryForAuthenticatedUser: [\n            \"GET /repos/{owner}/{repo}/codespaces/devcontainers\",\n        ],\n        listForAuthenticatedUser: [\"GET /user/codespaces\"],\n        listInOrganization: [\n            \"GET /orgs/{org}/codespaces\",\n            {},\n            { renamedParameters: { org_id: \"org\" } },\n        ],\n        listInRepositoryForAuthenticatedUser: [\n            \"GET /repos/{owner}/{repo}/codespaces\",\n        ],\n        listOrgSecrets: [\"GET /organizations/{org}/codespaces/secrets\"],\n        listRepoSecrets: [\"GET /repos/{owner}/{repo}/codespaces/secrets\"],\n        listRepositoriesForSecretForAuthenticatedUser: [\n            \"GET /user/codespaces/secrets/{secret_name}/repositories\",\n        ],\n        listSecretsForAuthenticatedUser: [\"GET /user/codespaces/secrets\"],\n        listSelectedReposForOrgSecret: [\n            \"GET /organizations/{org}/codespaces/secrets/{secret_name}/repositories\",\n        ],\n        preFlightWithRepoForAuthenticatedUser: [\n            \"GET /repos/{owner}/{repo}/codespaces/new\",\n        ],\n        removeRepositoryForSecretForAuthenticatedUser: [\n            \"DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        removeSelectedRepoFromOrgSecret: [\n            \"DELETE /organizations/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        repoMachinesForAuthenticatedUser: [\n            \"GET /repos/{owner}/{repo}/codespaces/machines\",\n        ],\n        setRepositoriesForSecretForAuthenticatedUser: [\n            \"PUT /user/codespaces/secrets/{secret_name}/repositories\",\n        ],\n        setSelectedReposForOrgSecret: [\n            \"PUT /organizations/{org}/codespaces/secrets/{secret_name}/repositories\",\n        ],\n        startForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/start\"],\n        stopForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/stop\"],\n        stopInOrganization: [\n            \"POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop\",\n        ],\n        updateForAuthenticatedUser: [\"PATCH /user/codespaces/{codespace_name}\"],\n    },\n    dependabot: {\n        addSelectedRepoToOrgSecret: [\n            \"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        createOrUpdateOrgSecret: [\n            \"PUT /orgs/{org}/dependabot/secrets/{secret_name}\",\n        ],\n        createOrUpdateRepoSecret: [\n            \"PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\",\n        ],\n        deleteOrgSecret: [\"DELETE /orgs/{org}/dependabot/secrets/{secret_name}\"],\n        deleteRepoSecret: [\n            \"DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\",\n        ],\n        getAlert: [\"GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\"],\n        getOrgPublicKey: [\"GET /orgs/{org}/dependabot/secrets/public-key\"],\n        getOrgSecret: [\"GET /orgs/{org}/dependabot/secrets/{secret_name}\"],\n        getRepoPublicKey: [\n            \"GET /repos/{owner}/{repo}/dependabot/secrets/public-key\",\n        ],\n        getRepoSecret: [\n            \"GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\",\n        ],\n        listAlertsForRepo: [\"GET /repos/{owner}/{repo}/dependabot/alerts\"],\n        listOrgSecrets: [\"GET /orgs/{org}/dependabot/secrets\"],\n        listRepoSecrets: [\"GET /repos/{owner}/{repo}/dependabot/secrets\"],\n        listSelectedReposForOrgSecret: [\n            \"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\",\n        ],\n        removeSelectedRepoFromOrgSecret: [\n            \"DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\",\n        ],\n        setSelectedReposForOrgSecret: [\n            \"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories\",\n        ],\n        updateAlert: [\n            \"PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}\",\n        ],\n    },\n    dependencyGraph: {\n        createRepositorySnapshot: [\n            \"POST /repos/{owner}/{repo}/dependency-graph/snapshots\",\n        ],\n        diffRange: [\n            \"GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}\",\n        ],\n    },\n    emojis: { get: [\"GET /emojis\"] },\n    enterpriseAdmin: {\n        addCustomLabelsToSelfHostedRunnerForEnterprise: [\n            \"POST /enterprises/{enterprise}/actions/runners/{runner_id}/labels\",\n        ],\n        disableSelectedOrganizationGithubActionsEnterprise: [\n            \"DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\",\n        ],\n        enableSelectedOrganizationGithubActionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\",\n        ],\n        getAllowedActionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions/selected-actions\",\n        ],\n        getGithubActionsPermissionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions\",\n        ],\n        getServerStatistics: [\n            \"GET /enterprise-installation/{enterprise_or_org}/server-statistics\",\n        ],\n        listLabelsForSelfHostedRunnerForEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/runners/{runner_id}/labels\",\n        ],\n        listSelectedOrganizationsEnabledGithubActionsEnterprise: [\n            \"GET /enterprises/{enterprise}/actions/permissions/organizations\",\n        ],\n        removeAllCustomLabelsFromSelfHostedRunnerForEnterprise: [\n            \"DELETE /enterprises/{enterprise}/actions/runners/{runner_id}/labels\",\n        ],\n        removeCustomLabelFromSelfHostedRunnerForEnterprise: [\n            \"DELETE /enterprises/{enterprise}/actions/runners/{runner_id}/labels/{name}\",\n        ],\n        setAllowedActionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/selected-actions\",\n        ],\n        setCustomLabelsForSelfHostedRunnerForEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/runners/{runner_id}/labels\",\n        ],\n        setGithubActionsPermissionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions\",\n        ],\n        setSelectedOrganizationsEnabledGithubActionsEnterprise: [\n            \"PUT /enterprises/{enterprise}/actions/permissions/organizations\",\n        ],\n    },\n    gists: {\n        checkIsStarred: [\"GET /gists/{gist_id}/star\"],\n        create: [\"POST /gists\"],\n        createComment: [\"POST /gists/{gist_id}/comments\"],\n        delete: [\"DELETE /gists/{gist_id}\"],\n        deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\n        fork: [\"POST /gists/{gist_id}/forks\"],\n        get: [\"GET /gists/{gist_id}\"],\n        getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\n        getRevision: [\"GET /gists/{gist_id}/{sha}\"],\n        list: [\"GET /gists\"],\n        listComments: [\"GET /gists/{gist_id}/comments\"],\n        listCommits: [\"GET /gists/{gist_id}/commits\"],\n        listForUser: [\"GET /users/{username}/gists\"],\n        listForks: [\"GET /gists/{gist_id}/forks\"],\n        listPublic: [\"GET /gists/public\"],\n        listStarred: [\"GET /gists/starred\"],\n        star: [\"PUT /gists/{gist_id}/star\"],\n        unstar: [\"DELETE /gists/{gist_id}/star\"],\n        update: [\"PATCH /gists/{gist_id}\"],\n        updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"],\n    },\n    git: {\n        createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\n        createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\n        createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\n        createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\n        createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\n        deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\n        getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\n        getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\n        getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\n        getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\n        getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\n        listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\n        updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"],\n    },\n    gitignore: {\n        getAllTemplates: [\"GET /gitignore/templates\"],\n        getTemplate: [\"GET /gitignore/templates/{name}\"],\n    },\n    interactions: {\n        getRestrictionsForAuthenticatedUser: [\"GET /user/interaction-limits\"],\n        getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\"],\n        getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\"],\n        getRestrictionsForYourPublicRepos: [\n            \"GET /user/interaction-limits\",\n            {},\n            { renamed: [\"interactions\", \"getRestrictionsForAuthenticatedUser\"] },\n        ],\n        removeRestrictionsForAuthenticatedUser: [\"DELETE /user/interaction-limits\"],\n        removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\"],\n        removeRestrictionsForRepo: [\n            \"DELETE /repos/{owner}/{repo}/interaction-limits\",\n        ],\n        removeRestrictionsForYourPublicRepos: [\n            \"DELETE /user/interaction-limits\",\n            {},\n            { renamed: [\"interactions\", \"removeRestrictionsForAuthenticatedUser\"] },\n        ],\n        setRestrictionsForAuthenticatedUser: [\"PUT /user/interaction-limits\"],\n        setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\"],\n        setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\"],\n        setRestrictionsForYourPublicRepos: [\n            \"PUT /user/interaction-limits\",\n            {},\n            { renamed: [\"interactions\", \"setRestrictionsForAuthenticatedUser\"] },\n        ],\n    },\n    issues: {\n        addAssignees: [\n            \"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\",\n        ],\n        addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n        checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\n        create: [\"POST /repos/{owner}/{repo}/issues\"],\n        createComment: [\n            \"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\",\n        ],\n        createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\n        createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\n        deleteComment: [\n            \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\",\n        ],\n        deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\n        deleteMilestone: [\n            \"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\",\n        ],\n        get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\n        getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n        getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\n        getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\n        getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n        list: [\"GET /issues\"],\n        listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\n        listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n        listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\n        listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\n        listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\n        listEventsForTimeline: [\n            \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\",\n        ],\n        listForAuthenticatedUser: [\"GET /user/issues\"],\n        listForOrg: [\"GET /orgs/{org}/issues\"],\n        listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\n        listLabelsForMilestone: [\n            \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\",\n        ],\n        listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\n        listLabelsOnIssue: [\n            \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n        ],\n        listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\n        lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n        removeAllLabels: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n        ],\n        removeAssignees: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\",\n        ],\n        removeLabel: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\",\n        ],\n        setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n        unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n        update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\n        updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n        updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\n        updateMilestone: [\n            \"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\",\n        ],\n    },\n    licenses: {\n        get: [\"GET /licenses/{license}\"],\n        getAllCommonlyUsed: [\"GET /licenses\"],\n        getForRepo: [\"GET /repos/{owner}/{repo}/license\"],\n    },\n    markdown: {\n        render: [\"POST /markdown\"],\n        renderRaw: [\n            \"POST /markdown/raw\",\n            { headers: { \"content-type\": \"text/plain; charset=utf-8\" } },\n        ],\n    },\n    meta: {\n        get: [\"GET /meta\"],\n        getOctocat: [\"GET /octocat\"],\n        getZen: [\"GET /zen\"],\n        root: [\"GET /\"],\n    },\n    migrations: {\n        cancelImport: [\"DELETE /repos/{owner}/{repo}/import\"],\n        deleteArchiveForAuthenticatedUser: [\n            \"DELETE /user/migrations/{migration_id}/archive\",\n        ],\n        deleteArchiveForOrg: [\n            \"DELETE /orgs/{org}/migrations/{migration_id}/archive\",\n        ],\n        downloadArchiveForOrg: [\n            \"GET /orgs/{org}/migrations/{migration_id}/archive\",\n        ],\n        getArchiveForAuthenticatedUser: [\n            \"GET /user/migrations/{migration_id}/archive\",\n        ],\n        getCommitAuthors: [\"GET /repos/{owner}/{repo}/import/authors\"],\n        getImportStatus: [\"GET /repos/{owner}/{repo}/import\"],\n        getLargeFiles: [\"GET /repos/{owner}/{repo}/import/large_files\"],\n        getStatusForAuthenticatedUser: [\"GET /user/migrations/{migration_id}\"],\n        getStatusForOrg: [\"GET /orgs/{org}/migrations/{migration_id}\"],\n        listForAuthenticatedUser: [\"GET /user/migrations\"],\n        listForOrg: [\"GET /orgs/{org}/migrations\"],\n        listReposForAuthenticatedUser: [\n            \"GET /user/migrations/{migration_id}/repositories\",\n        ],\n        listReposForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/repositories\"],\n        listReposForUser: [\n            \"GET /user/migrations/{migration_id}/repositories\",\n            {},\n            { renamed: [\"migrations\", \"listReposForAuthenticatedUser\"] },\n        ],\n        mapCommitAuthor: [\"PATCH /repos/{owner}/{repo}/import/authors/{author_id}\"],\n        setLfsPreference: [\"PATCH /repos/{owner}/{repo}/import/lfs\"],\n        startForAuthenticatedUser: [\"POST /user/migrations\"],\n        startForOrg: [\"POST /orgs/{org}/migrations\"],\n        startImport: [\"PUT /repos/{owner}/{repo}/import\"],\n        unlockRepoForAuthenticatedUser: [\n            \"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\",\n        ],\n        unlockRepoForOrg: [\n            \"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\",\n        ],\n        updateImport: [\"PATCH /repos/{owner}/{repo}/import\"],\n    },\n    orgs: {\n        addSecurityManagerTeam: [\n            \"PUT /orgs/{org}/security-managers/teams/{team_slug}\",\n        ],\n        blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\n        cancelInvitation: [\"DELETE /orgs/{org}/invitations/{invitation_id}\"],\n        checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\n        checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\n        checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\n        convertMemberToOutsideCollaborator: [\n            \"PUT /orgs/{org}/outside_collaborators/{username}\",\n        ],\n        createCustomRole: [\"POST /orgs/{org}/custom_roles\"],\n        createInvitation: [\"POST /orgs/{org}/invitations\"],\n        createWebhook: [\"POST /orgs/{org}/hooks\"],\n        deleteCustomRole: [\"DELETE /orgs/{org}/custom_roles/{role_id}\"],\n        deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\n        enableOrDisableSecurityProductOnAllOrgRepos: [\n            \"POST /orgs/{org}/{security_product}/{enablement}\",\n        ],\n        get: [\"GET /orgs/{org}\"],\n        getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\n        getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\n        getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\n        getWebhookConfigForOrg: [\"GET /orgs/{org}/hooks/{hook_id}/config\"],\n        getWebhookDelivery: [\n            \"GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}\",\n        ],\n        list: [\"GET /organizations\"],\n        listAppInstallations: [\"GET /orgs/{org}/installations\"],\n        listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\n        listCustomRoles: [\"GET /organizations/{organization_id}/custom_roles\"],\n        listFailedInvitations: [\"GET /orgs/{org}/failed_invitations\"],\n        listFineGrainedPermissions: [\"GET /orgs/{org}/fine_grained_permissions\"],\n        listForAuthenticatedUser: [\"GET /user/orgs\"],\n        listForUser: [\"GET /users/{username}/orgs\"],\n        listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\n        listMembers: [\"GET /orgs/{org}/members\"],\n        listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\n        listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\n        listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\n        listPublicMembers: [\"GET /orgs/{org}/public_members\"],\n        listSecurityManagerTeams: [\"GET /orgs/{org}/security-managers\"],\n        listWebhookDeliveries: [\"GET /orgs/{org}/hooks/{hook_id}/deliveries\"],\n        listWebhooks: [\"GET /orgs/{org}/hooks\"],\n        pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\n        redeliverWebhookDelivery: [\n            \"POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\",\n        ],\n        removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\n        removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\n        removeOutsideCollaborator: [\n            \"DELETE /orgs/{org}/outside_collaborators/{username}\",\n        ],\n        removePublicMembershipForAuthenticatedUser: [\n            \"DELETE /orgs/{org}/public_members/{username}\",\n        ],\n        removeSecurityManagerTeam: [\n            \"DELETE /orgs/{org}/security-managers/teams/{team_slug}\",\n        ],\n        setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\n        setPublicMembershipForAuthenticatedUser: [\n            \"PUT /orgs/{org}/public_members/{username}\",\n        ],\n        unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\n        update: [\"PATCH /orgs/{org}\"],\n        updateCustomRole: [\"PATCH /orgs/{org}/custom_roles/{role_id}\"],\n        updateMembershipForAuthenticatedUser: [\n            \"PATCH /user/memberships/orgs/{org}\",\n        ],\n        updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"],\n        updateWebhookConfigForOrg: [\"PATCH /orgs/{org}/hooks/{hook_id}/config\"],\n    },\n    packages: {\n        deletePackageForAuthenticatedUser: [\n            \"DELETE /user/packages/{package_type}/{package_name}\",\n        ],\n        deletePackageForOrg: [\n            \"DELETE /orgs/{org}/packages/{package_type}/{package_name}\",\n        ],\n        deletePackageForUser: [\n            \"DELETE /users/{username}/packages/{package_type}/{package_name}\",\n        ],\n        deletePackageVersionForAuthenticatedUser: [\n            \"DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        deletePackageVersionForOrg: [\n            \"DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        deletePackageVersionForUser: [\n            \"DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        getAllPackageVersionsForAPackageOwnedByAnOrg: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n            {},\n            { renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByOrg\"] },\n        ],\n        getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}/versions\",\n            {},\n            {\n                renamed: [\n                    \"packages\",\n                    \"getAllPackageVersionsForPackageOwnedByAuthenticatedUser\",\n                ],\n            },\n        ],\n        getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}/versions\",\n        ],\n        getAllPackageVersionsForPackageOwnedByOrg: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n        ],\n        getAllPackageVersionsForPackageOwnedByUser: [\n            \"GET /users/{username}/packages/{package_type}/{package_name}/versions\",\n        ],\n        getPackageForAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}\",\n        ],\n        getPackageForOrganization: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}\",\n        ],\n        getPackageForUser: [\n            \"GET /users/{username}/packages/{package_type}/{package_name}\",\n        ],\n        getPackageVersionForAuthenticatedUser: [\n            \"GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        getPackageVersionForOrganization: [\n            \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        getPackageVersionForUser: [\n            \"GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\",\n        ],\n        listPackagesForAuthenticatedUser: [\"GET /user/packages\"],\n        listPackagesForOrganization: [\"GET /orgs/{org}/packages\"],\n        listPackagesForUser: [\"GET /users/{username}/packages\"],\n        restorePackageForAuthenticatedUser: [\n            \"POST /user/packages/{package_type}/{package_name}/restore{?token}\",\n        ],\n        restorePackageForOrg: [\n            \"POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}\",\n        ],\n        restorePackageForUser: [\n            \"POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}\",\n        ],\n        restorePackageVersionForAuthenticatedUser: [\n            \"POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n        ],\n        restorePackageVersionForOrg: [\n            \"POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n        ],\n        restorePackageVersionForUser: [\n            \"POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\",\n        ],\n    },\n    projects: {\n        addCollaborator: [\"PUT /projects/{project_id}/collaborators/{username}\"],\n        createCard: [\"POST /projects/columns/{column_id}/cards\"],\n        createColumn: [\"POST /projects/{project_id}/columns\"],\n        createForAuthenticatedUser: [\"POST /user/projects\"],\n        createForOrg: [\"POST /orgs/{org}/projects\"],\n        createForRepo: [\"POST /repos/{owner}/{repo}/projects\"],\n        delete: [\"DELETE /projects/{project_id}\"],\n        deleteCard: [\"DELETE /projects/columns/cards/{card_id}\"],\n        deleteColumn: [\"DELETE /projects/columns/{column_id}\"],\n        get: [\"GET /projects/{project_id}\"],\n        getCard: [\"GET /projects/columns/cards/{card_id}\"],\n        getColumn: [\"GET /projects/columns/{column_id}\"],\n        getPermissionForUser: [\n            \"GET /projects/{project_id}/collaborators/{username}/permission\",\n        ],\n        listCards: [\"GET /projects/columns/{column_id}/cards\"],\n        listCollaborators: [\"GET /projects/{project_id}/collaborators\"],\n        listColumns: [\"GET /projects/{project_id}/columns\"],\n        listForOrg: [\"GET /orgs/{org}/projects\"],\n        listForRepo: [\"GET /repos/{owner}/{repo}/projects\"],\n        listForUser: [\"GET /users/{username}/projects\"],\n        moveCard: [\"POST /projects/columns/cards/{card_id}/moves\"],\n        moveColumn: [\"POST /projects/columns/{column_id}/moves\"],\n        removeCollaborator: [\n            \"DELETE /projects/{project_id}/collaborators/{username}\",\n        ],\n        update: [\"PATCH /projects/{project_id}\"],\n        updateCard: [\"PATCH /projects/columns/cards/{card_id}\"],\n        updateColumn: [\"PATCH /projects/columns/{column_id}\"],\n    },\n    pulls: {\n        checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n        create: [\"POST /repos/{owner}/{repo}/pulls\"],\n        createReplyForReviewComment: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\",\n        ],\n        createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n        createReviewComment: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n        ],\n        deletePendingReview: [\n            \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n        ],\n        deleteReviewComment: [\n            \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\",\n        ],\n        dismissReview: [\n            \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\",\n        ],\n        get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\n        getReview: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n        ],\n        getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n        list: [\"GET /repos/{owner}/{repo}/pulls\"],\n        listCommentsForReview: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\",\n        ],\n        listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\n        listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\n        listRequestedReviewers: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n        ],\n        listReviewComments: [\n            \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n        ],\n        listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\n        listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n        merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n        removeRequestedReviewers: [\n            \"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n        ],\n        requestReviewers: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\",\n        ],\n        submitReview: [\n            \"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\",\n        ],\n        update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\n        updateBranch: [\n            \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\",\n        ],\n        updateReview: [\n            \"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\",\n        ],\n        updateReviewComment: [\n            \"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\",\n        ],\n    },\n    rateLimit: { get: [\"GET /rate_limit\"] },\n    reactions: {\n        createForCommitComment: [\n            \"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n        ],\n        createForIssue: [\n            \"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\",\n        ],\n        createForIssueComment: [\n            \"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n        ],\n        createForPullRequestReviewComment: [\n            \"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n        ],\n        createForRelease: [\n            \"POST /repos/{owner}/{repo}/releases/{release_id}/reactions\",\n        ],\n        createForTeamDiscussionCommentInOrg: [\n            \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n        ],\n        createForTeamDiscussionInOrg: [\n            \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n        ],\n        deleteForCommitComment: [\n            \"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\",\n        ],\n        deleteForIssue: [\n            \"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\",\n        ],\n        deleteForIssueComment: [\n            \"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\",\n        ],\n        deleteForPullRequestComment: [\n            \"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\",\n        ],\n        deleteForRelease: [\n            \"DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}\",\n        ],\n        deleteForTeamDiscussion: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\",\n        ],\n        deleteForTeamDiscussionComment: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\",\n        ],\n        listForCommitComment: [\n            \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n        ],\n        listForIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\"],\n        listForIssueComment: [\n            \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n        ],\n        listForPullRequestReviewComment: [\n            \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n        ],\n        listForRelease: [\n            \"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\",\n        ],\n        listForTeamDiscussionCommentInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n        ],\n        listForTeamDiscussionInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n        ],\n    },\n    repos: {\n        acceptInvitation: [\n            \"PATCH /user/repository_invitations/{invitation_id}\",\n            {},\n            { renamed: [\"repos\", \"acceptInvitationForAuthenticatedUser\"] },\n        ],\n        acceptInvitationForAuthenticatedUser: [\n            \"PATCH /user/repository_invitations/{invitation_id}\",\n        ],\n        addAppAccessRestrictions: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n            {},\n            { mapToData: \"apps\" },\n        ],\n        addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\n        addStatusCheckContexts: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n            {},\n            { mapToData: \"contexts\" },\n        ],\n        addTeamAccessRestrictions: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n            {},\n            { mapToData: \"teams\" },\n        ],\n        addUserAccessRestrictions: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n            {},\n            { mapToData: \"users\" },\n        ],\n        checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\n        checkVulnerabilityAlerts: [\n            \"GET /repos/{owner}/{repo}/vulnerability-alerts\",\n        ],\n        codeownersErrors: [\"GET /repos/{owner}/{repo}/codeowners/errors\"],\n        compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\n        compareCommitsWithBasehead: [\n            \"GET /repos/{owner}/{repo}/compare/{basehead}\",\n        ],\n        createAutolink: [\"POST /repos/{owner}/{repo}/autolinks\"],\n        createCommitComment: [\n            \"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n        ],\n        createCommitSignatureProtection: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n        ],\n        createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\n        createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\n        createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\n        createDeploymentBranchPolicy: [\n            \"POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\",\n        ],\n        createDeploymentStatus: [\n            \"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n        ],\n        createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\n        createForAuthenticatedUser: [\"POST /user/repos\"],\n        createFork: [\"POST /repos/{owner}/{repo}/forks\"],\n        createInOrg: [\"POST /orgs/{org}/repos\"],\n        createOrUpdateEnvironment: [\n            \"PUT /repos/{owner}/{repo}/environments/{environment_name}\",\n        ],\n        createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\n        createPagesDeployment: [\"POST /repos/{owner}/{repo}/pages/deployment\"],\n        createPagesSite: [\"POST /repos/{owner}/{repo}/pages\"],\n        createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\n        createTagProtection: [\"POST /repos/{owner}/{repo}/tags/protection\"],\n        createUsingTemplate: [\n            \"POST /repos/{template_owner}/{template_repo}/generate\",\n        ],\n        createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\n        declineInvitation: [\n            \"DELETE /user/repository_invitations/{invitation_id}\",\n            {},\n            { renamed: [\"repos\", \"declineInvitationForAuthenticatedUser\"] },\n        ],\n        declineInvitationForAuthenticatedUser: [\n            \"DELETE /user/repository_invitations/{invitation_id}\",\n        ],\n        delete: [\"DELETE /repos/{owner}/{repo}\"],\n        deleteAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\",\n        ],\n        deleteAdminBranchProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n        ],\n        deleteAnEnvironment: [\n            \"DELETE /repos/{owner}/{repo}/environments/{environment_name}\",\n        ],\n        deleteAutolink: [\"DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n        deleteBranchProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\",\n        ],\n        deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\n        deleteCommitSignatureProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n        ],\n        deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\n        deleteDeployment: [\n            \"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\",\n        ],\n        deleteDeploymentBranchPolicy: [\n            \"DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\",\n        ],\n        deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\n        deleteInvitation: [\n            \"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\",\n        ],\n        deletePagesSite: [\"DELETE /repos/{owner}/{repo}/pages\"],\n        deletePullRequestReviewProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n        ],\n        deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\n        deleteReleaseAsset: [\n            \"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\",\n        ],\n        deleteTagProtection: [\n            \"DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}\",\n        ],\n        deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\n        disableAutomatedSecurityFixes: [\n            \"DELETE /repos/{owner}/{repo}/automated-security-fixes\",\n        ],\n        disableLfsForRepo: [\"DELETE /repos/{owner}/{repo}/lfs\"],\n        disableVulnerabilityAlerts: [\n            \"DELETE /repos/{owner}/{repo}/vulnerability-alerts\",\n        ],\n        downloadArchive: [\n            \"GET /repos/{owner}/{repo}/zipball/{ref}\",\n            {},\n            { renamed: [\"repos\", \"downloadZipballArchive\"] },\n        ],\n        downloadTarballArchive: [\"GET /repos/{owner}/{repo}/tarball/{ref}\"],\n        downloadZipballArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\"],\n        enableAutomatedSecurityFixes: [\n            \"PUT /repos/{owner}/{repo}/automated-security-fixes\",\n        ],\n        enableLfsForRepo: [\"PUT /repos/{owner}/{repo}/lfs\"],\n        enableVulnerabilityAlerts: [\n            \"PUT /repos/{owner}/{repo}/vulnerability-alerts\",\n        ],\n        generateReleaseNotes: [\n            \"POST /repos/{owner}/{repo}/releases/generate-notes\",\n        ],\n        get: [\"GET /repos/{owner}/{repo}\"],\n        getAccessRestrictions: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\",\n        ],\n        getAdminBranchProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n        ],\n        getAllEnvironments: [\"GET /repos/{owner}/{repo}/environments\"],\n        getAllStatusCheckContexts: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n        ],\n        getAllTopics: [\"GET /repos/{owner}/{repo}/topics\"],\n        getAppsWithAccessToProtectedBranch: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n        ],\n        getAutolink: [\"GET /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n        getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\n        getBranchProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection\",\n        ],\n        getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\n        getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\n        getCollaboratorPermissionLevel: [\n            \"GET /repos/{owner}/{repo}/collaborators/{username}/permission\",\n        ],\n        getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\n        getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\n        getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\n        getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\n        getCommitSignatureProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\",\n        ],\n        getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\"],\n        getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\n        getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\n        getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\n        getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n        getDeploymentBranchPolicy: [\n            \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\",\n        ],\n        getDeploymentStatus: [\n            \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\",\n        ],\n        getEnvironment: [\n            \"GET /repos/{owner}/{repo}/environments/{environment_name}\",\n        ],\n        getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\n        getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\n        getPages: [\"GET /repos/{owner}/{repo}/pages\"],\n        getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\n        getPagesHealthCheck: [\"GET /repos/{owner}/{repo}/pages/health\"],\n        getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\n        getPullRequestReviewProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n        ],\n        getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\n        getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\n        getReadmeInDirectory: [\"GET /repos/{owner}/{repo}/readme/{dir}\"],\n        getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\n        getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n        getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\n        getStatusChecksProtection: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n        ],\n        getTeamsWithAccessToProtectedBranch: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n        ],\n        getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\n        getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\n        getUsersWithAccessToProtectedBranch: [\n            \"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n        ],\n        getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\n        getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\n        getWebhookConfigForRepo: [\n            \"GET /repos/{owner}/{repo}/hooks/{hook_id}/config\",\n        ],\n        getWebhookDelivery: [\n            \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}\",\n        ],\n        listAutolinks: [\"GET /repos/{owner}/{repo}/autolinks\"],\n        listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\n        listBranchesForHeadCommit: [\n            \"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\",\n        ],\n        listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\n        listCommentsForCommit: [\n            \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n        ],\n        listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\n        listCommitStatusesForRef: [\n            \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\",\n        ],\n        listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\n        listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\n        listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\n        listDeploymentBranchPolicies: [\n            \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\",\n        ],\n        listDeploymentStatuses: [\n            \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n        ],\n        listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\n        listForAuthenticatedUser: [\"GET /user/repos\"],\n        listForOrg: [\"GET /orgs/{org}/repos\"],\n        listForUser: [\"GET /users/{username}/repos\"],\n        listForks: [\"GET /repos/{owner}/{repo}/forks\"],\n        listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\n        listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\n        listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\n        listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\n        listPublic: [\"GET /repositories\"],\n        listPullRequestsAssociatedWithCommit: [\n            \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\",\n        ],\n        listReleaseAssets: [\n            \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\",\n        ],\n        listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\n        listTagProtection: [\"GET /repos/{owner}/{repo}/tags/protection\"],\n        listTags: [\"GET /repos/{owner}/{repo}/tags\"],\n        listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\n        listWebhookDeliveries: [\n            \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\",\n        ],\n        listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\n        merge: [\"POST /repos/{owner}/{repo}/merges\"],\n        mergeUpstream: [\"POST /repos/{owner}/{repo}/merge-upstream\"],\n        pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\n        redeliverWebhookDelivery: [\n            \"POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\",\n        ],\n        removeAppAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n            {},\n            { mapToData: \"apps\" },\n        ],\n        removeCollaborator: [\n            \"DELETE /repos/{owner}/{repo}/collaborators/{username}\",\n        ],\n        removeStatusCheckContexts: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n            {},\n            { mapToData: \"contexts\" },\n        ],\n        removeStatusCheckProtection: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n        ],\n        removeTeamAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n            {},\n            { mapToData: \"teams\" },\n        ],\n        removeUserAccessRestrictions: [\n            \"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n            {},\n            { mapToData: \"users\" },\n        ],\n        renameBranch: [\"POST /repos/{owner}/{repo}/branches/{branch}/rename\"],\n        replaceAllTopics: [\"PUT /repos/{owner}/{repo}/topics\"],\n        requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\n        setAdminBranchProtection: [\n            \"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\",\n        ],\n        setAppAccessRestrictions: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\",\n            {},\n            { mapToData: \"apps\" },\n        ],\n        setStatusCheckContexts: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\",\n            {},\n            { mapToData: \"contexts\" },\n        ],\n        setTeamAccessRestrictions: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\",\n            {},\n            { mapToData: \"teams\" },\n        ],\n        setUserAccessRestrictions: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\",\n            {},\n            { mapToData: \"users\" },\n        ],\n        testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\n        transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\n        update: [\"PATCH /repos/{owner}/{repo}\"],\n        updateBranchProtection: [\n            \"PUT /repos/{owner}/{repo}/branches/{branch}/protection\",\n        ],\n        updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\n        updateDeploymentBranchPolicy: [\n            \"PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}\",\n        ],\n        updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\n        updateInvitation: [\n            \"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\",\n        ],\n        updatePullRequestReviewProtection: [\n            \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\",\n        ],\n        updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\n        updateReleaseAsset: [\n            \"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\",\n        ],\n        updateStatusCheckPotection: [\n            \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n            {},\n            { renamed: [\"repos\", \"updateStatusCheckProtection\"] },\n        ],\n        updateStatusCheckProtection: [\n            \"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\",\n        ],\n        updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\n        updateWebhookConfigForRepo: [\n            \"PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config\",\n        ],\n        uploadReleaseAsset: [\n            \"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\",\n            { baseUrl: \"https://uploads.github.com\" },\n        ],\n    },\n    search: {\n        code: [\"GET /search/code\"],\n        commits: [\"GET /search/commits\"],\n        issuesAndPullRequests: [\"GET /search/issues\"],\n        labels: [\"GET /search/labels\"],\n        repos: [\"GET /search/repositories\"],\n        topics: [\"GET /search/topics\"],\n        users: [\"GET /search/users\"],\n    },\n    secretScanning: {\n        getAlert: [\n            \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\",\n        ],\n        listAlertsForEnterprise: [\n            \"GET /enterprises/{enterprise}/secret-scanning/alerts\",\n        ],\n        listAlertsForOrg: [\"GET /orgs/{org}/secret-scanning/alerts\"],\n        listAlertsForRepo: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts\"],\n        listLocationsForAlert: [\n            \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\",\n        ],\n        updateAlert: [\n            \"PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\",\n        ],\n    },\n    teams: {\n        addOrUpdateMembershipForUserInOrg: [\n            \"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n        ],\n        addOrUpdateProjectPermissionsInOrg: [\n            \"PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n        ],\n        addOrUpdateRepoPermissionsInOrg: [\n            \"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n        ],\n        checkPermissionsForProjectInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n        ],\n        checkPermissionsForRepoInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n        ],\n        create: [\"POST /orgs/{org}/teams\"],\n        createDiscussionCommentInOrg: [\n            \"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n        ],\n        createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\n        deleteDiscussionCommentInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n        ],\n        deleteDiscussionInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n        ],\n        deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\n        getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\n        getDiscussionCommentInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n        ],\n        getDiscussionInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n        ],\n        getMembershipForUserInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n        ],\n        list: [\"GET /orgs/{org}/teams\"],\n        listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\n        listDiscussionCommentsInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n        ],\n        listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\n        listForAuthenticatedUser: [\"GET /user/teams\"],\n        listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\n        listPendingInvitationsInOrg: [\n            \"GET /orgs/{org}/teams/{team_slug}/invitations\",\n        ],\n        listProjectsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects\"],\n        listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\n        removeMembershipForUserInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\",\n        ],\n        removeProjectInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}\",\n        ],\n        removeRepoInOrg: [\n            \"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\",\n        ],\n        updateDiscussionCommentInOrg: [\n            \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\",\n        ],\n        updateDiscussionInOrg: [\n            \"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\",\n        ],\n        updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"],\n    },\n    users: {\n        addEmailForAuthenticated: [\n            \"POST /user/emails\",\n            {},\n            { renamed: [\"users\", \"addEmailForAuthenticatedUser\"] },\n        ],\n        addEmailForAuthenticatedUser: [\"POST /user/emails\"],\n        block: [\"PUT /user/blocks/{username}\"],\n        checkBlocked: [\"GET /user/blocks/{username}\"],\n        checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\n        checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\n        createGpgKeyForAuthenticated: [\n            \"POST /user/gpg_keys\",\n            {},\n            { renamed: [\"users\", \"createGpgKeyForAuthenticatedUser\"] },\n        ],\n        createGpgKeyForAuthenticatedUser: [\"POST /user/gpg_keys\"],\n        createPublicSshKeyForAuthenticated: [\n            \"POST /user/keys\",\n            {},\n            { renamed: [\"users\", \"createPublicSshKeyForAuthenticatedUser\"] },\n        ],\n        createPublicSshKeyForAuthenticatedUser: [\"POST /user/keys\"],\n        createSshSigningKeyForAuthenticatedUser: [\"POST /user/ssh_signing_keys\"],\n        deleteEmailForAuthenticated: [\n            \"DELETE /user/emails\",\n            {},\n            { renamed: [\"users\", \"deleteEmailForAuthenticatedUser\"] },\n        ],\n        deleteEmailForAuthenticatedUser: [\"DELETE /user/emails\"],\n        deleteGpgKeyForAuthenticated: [\n            \"DELETE /user/gpg_keys/{gpg_key_id}\",\n            {},\n            { renamed: [\"users\", \"deleteGpgKeyForAuthenticatedUser\"] },\n        ],\n        deleteGpgKeyForAuthenticatedUser: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\n        deletePublicSshKeyForAuthenticated: [\n            \"DELETE /user/keys/{key_id}\",\n            {},\n            { renamed: [\"users\", \"deletePublicSshKeyForAuthenticatedUser\"] },\n        ],\n        deletePublicSshKeyForAuthenticatedUser: [\"DELETE /user/keys/{key_id}\"],\n        deleteSshSigningKeyForAuthenticatedUser: [\n            \"DELETE /user/ssh_signing_keys/{ssh_signing_key_id}\",\n        ],\n        follow: [\"PUT /user/following/{username}\"],\n        getAuthenticated: [\"GET /user\"],\n        getByUsername: [\"GET /users/{username}\"],\n        getContextForUser: [\"GET /users/{username}/hovercard\"],\n        getGpgKeyForAuthenticated: [\n            \"GET /user/gpg_keys/{gpg_key_id}\",\n            {},\n            { renamed: [\"users\", \"getGpgKeyForAuthenticatedUser\"] },\n        ],\n        getGpgKeyForAuthenticatedUser: [\"GET /user/gpg_keys/{gpg_key_id}\"],\n        getPublicSshKeyForAuthenticated: [\n            \"GET /user/keys/{key_id}\",\n            {},\n            { renamed: [\"users\", \"getPublicSshKeyForAuthenticatedUser\"] },\n        ],\n        getPublicSshKeyForAuthenticatedUser: [\"GET /user/keys/{key_id}\"],\n        getSshSigningKeyForAuthenticatedUser: [\n            \"GET /user/ssh_signing_keys/{ssh_signing_key_id}\",\n        ],\n        list: [\"GET /users\"],\n        listBlockedByAuthenticated: [\n            \"GET /user/blocks\",\n            {},\n            { renamed: [\"users\", \"listBlockedByAuthenticatedUser\"] },\n        ],\n        listBlockedByAuthenticatedUser: [\"GET /user/blocks\"],\n        listEmailsForAuthenticated: [\n            \"GET /user/emails\",\n            {},\n            { renamed: [\"users\", \"listEmailsForAuthenticatedUser\"] },\n        ],\n        listEmailsForAuthenticatedUser: [\"GET /user/emails\"],\n        listFollowedByAuthenticated: [\n            \"GET /user/following\",\n            {},\n            { renamed: [\"users\", \"listFollowedByAuthenticatedUser\"] },\n        ],\n        listFollowedByAuthenticatedUser: [\"GET /user/following\"],\n        listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\n        listFollowersForUser: [\"GET /users/{username}/followers\"],\n        listFollowingForUser: [\"GET /users/{username}/following\"],\n        listGpgKeysForAuthenticated: [\n            \"GET /user/gpg_keys\",\n            {},\n            { renamed: [\"users\", \"listGpgKeysForAuthenticatedUser\"] },\n        ],\n        listGpgKeysForAuthenticatedUser: [\"GET /user/gpg_keys\"],\n        listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\n        listPublicEmailsForAuthenticated: [\n            \"GET /user/public_emails\",\n            {},\n            { renamed: [\"users\", \"listPublicEmailsForAuthenticatedUser\"] },\n        ],\n        listPublicEmailsForAuthenticatedUser: [\"GET /user/public_emails\"],\n        listPublicKeysForUser: [\"GET /users/{username}/keys\"],\n        listPublicSshKeysForAuthenticated: [\n            \"GET /user/keys\",\n            {},\n            { renamed: [\"users\", \"listPublicSshKeysForAuthenticatedUser\"] },\n        ],\n        listPublicSshKeysForAuthenticatedUser: [\"GET /user/keys\"],\n        listSshSigningKeysForAuthenticatedUser: [\"GET /user/ssh_signing_keys\"],\n        listSshSigningKeysForUser: [\"GET /users/{username}/ssh_signing_keys\"],\n        setPrimaryEmailVisibilityForAuthenticated: [\n            \"PATCH /user/email/visibility\",\n            {},\n            { renamed: [\"users\", \"setPrimaryEmailVisibilityForAuthenticatedUser\"] },\n        ],\n        setPrimaryEmailVisibilityForAuthenticatedUser: [\n            \"PATCH /user/email/visibility\",\n        ],\n        unblock: [\"DELETE /user/blocks/{username}\"],\n        unfollow: [\"DELETE /user/following/{username}\"],\n        updateAuthenticated: [\"PATCH /user\"],\n    },\n};\nexport default Endpoints;\n","export const VERSION = \"6.7.0\";\n","export function endpointsToMethods(octokit, endpointsMap) {\n    const newMethods = {};\n    for (const [scope, endpoints] of Object.entries(endpointsMap)) {\n        for (const [methodName, endpoint] of Object.entries(endpoints)) {\n            const [route, defaults, decorations] = endpoint;\n            const [method, url] = route.split(/ /);\n            const endpointDefaults = Object.assign({ method, url }, defaults);\n            if (!newMethods[scope]) {\n                newMethods[scope] = {};\n            }\n            const scopeMethods = newMethods[scope];\n            if (decorations) {\n                scopeMethods[methodName] = decorate(octokit, scope, methodName, endpointDefaults, decorations);\n                continue;\n            }\n            scopeMethods[methodName] = octokit.request.defaults(endpointDefaults);\n        }\n    }\n    return newMethods;\n}\nfunction decorate(octokit, scope, methodName, defaults, decorations) {\n    const requestWithDefaults = octokit.request.defaults(defaults);\n    /* istanbul ignore next */\n    function withDecorations(...args) {\n        // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n        let options = requestWithDefaults.endpoint.merge(...args);\n        // There are currently no other decorations than `.mapToData`\n        if (decorations.mapToData) {\n            options = Object.assign({}, options, {\n                data: options[decorations.mapToData],\n                [decorations.mapToData]: undefined,\n            });\n            return requestWithDefaults(options);\n        }\n        if (decorations.renamed) {\n            const [newScope, newMethodName] = decorations.renamed;\n            octokit.log.warn(`octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`);\n        }\n        if (decorations.deprecated) {\n            octokit.log.warn(decorations.deprecated);\n        }\n        if (decorations.renamedParameters) {\n            // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n            const options = requestWithDefaults.endpoint.merge(...args);\n            for (const [name, alias] of Object.entries(decorations.renamedParameters)) {\n                if (name in options) {\n                    octokit.log.warn(`\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`);\n                    if (!(alias in options)) {\n                        options[alias] = options[name];\n                    }\n                    delete options[name];\n                }\n            }\n            return requestWithDefaults(options);\n        }\n        // @ts-ignore https://github.com/microsoft/TypeScript/issues/25488\n        return requestWithDefaults(...args);\n    }\n    return Object.assign(withDecorations, requestWithDefaults);\n}\n","import ENDPOINTS from \"./generated/endpoints\";\nimport { VERSION } from \"./version\";\nimport { endpointsToMethods } from \"./endpoints-to-methods\";\nexport function restEndpointMethods(octokit) {\n    const api = endpointsToMethods(octokit, ENDPOINTS);\n    return {\n        rest: api,\n    };\n}\nrestEndpointMethods.VERSION = VERSION;\nexport function legacyRestEndpointMethods(octokit) {\n    const api = endpointsToMethods(octokit, ENDPOINTS);\n    return {\n        ...api,\n        rest: api,\n    };\n}\nlegacyRestEndpointMethods.VERSION = VERSION;\n"],"names":["Endpoints","actions","addCustomLabelsToSelfHostedRunnerForOrg","addCustomLabelsToSelfHostedRunnerForRepo","addSelectedRepoToOrgSecret","approveWorkflowRun","cancelWorkflowRun","createOrUpdateEnvironmentSecret","createOrUpdateOrgSecret","createOrUpdateRepoSecret","createRegistrationTokenForOrg","createRegistrationTokenForRepo","createRemoveTokenForOrg","createRemoveTokenForRepo","createWorkflowDispatch","deleteActionsCacheById","deleteActionsCacheByKey","deleteArtifact","deleteEnvironmentSecret","deleteOrgSecret","deleteRepoSecret","deleteSelfHostedRunnerFromOrg","deleteSelfHostedRunnerFromRepo","deleteWorkflowRun","deleteWorkflowRunLogs","disableSelectedRepositoryGithubActionsOrganization","disableWorkflow","downloadArtifact","downloadJobLogsForWorkflowRun","downloadWorkflowRunAttemptLogs","downloadWorkflowRunLogs","enableSelectedRepositoryGithubActionsOrganization","enableWorkflow","getActionsCacheList","getActionsCacheUsage","getActionsCacheUsageByRepoForOrg","getActionsCacheUsageForEnterprise","getActionsCacheUsageForOrg","getAllowedActionsOrganization","getAllowedActionsRepository","getArtifact","getEnvironmentPublicKey","getEnvironmentSecret","getGithubActionsDefaultWorkflowPermissionsEnterprise","getGithubActionsDefaultWorkflowPermissionsOrganization","getGithubActionsDefaultWorkflowPermissionsRepository","getGithubActionsPermissionsOrganization","getGithubActionsPermissionsRepository","getJobForWorkflowRun","getOrgPublicKey","getOrgSecret","getPendingDeploymentsForRun","getRepoPermissions","renamed","getRepoPublicKey","getRepoSecret","getReviewsForRun","getSelfHostedRunnerForOrg","getSelfHostedRunnerForRepo","getWorkflow","getWorkflowAccessToRepository","getWorkflowRun","getWorkflowRunAttempt","getWorkflowRunUsage","getWorkflowUsage","listArtifactsForRepo","listEnvironmentSecrets","listJobsForWorkflowRun","listJobsForWorkflowRunAttempt","listLabelsForSelfHostedRunnerForOrg","listLabelsForSelfHostedRunnerForRepo","listOrgSecrets","listRepoSecrets","listRepoWorkflows","listRunnerApplicationsForOrg","listRunnerApplicationsForRepo","listSelectedReposForOrgSecret","listSelectedRepositoriesEnabledGithubActionsOrganization","listSelfHostedRunnersForOrg","listSelfHostedRunnersForRepo","listWorkflowRunArtifacts","listWorkflowRuns","listWorkflowRunsForRepo","reRunJobForWorkflowRun","reRunWorkflow","reRunWorkflowFailedJobs","removeAllCustomLabelsFromSelfHostedRunnerForOrg","removeAllCustomLabelsFromSelfHostedRunnerForRepo","removeCustomLabelFromSelfHostedRunnerForOrg","removeCustomLabelFromSelfHostedRunnerForRepo","removeSelectedRepoFromOrgSecret","reviewPendingDeploymentsForRun","setAllowedActionsOrganization","setAllowedActionsRepository","setCustomLabelsForSelfHostedRunnerForOrg","setCustomLabelsForSelfHostedRunnerForRepo","setGithubActionsDefaultWorkflowPermissionsEnterprise","setGithubActionsDefaultWorkflowPermissionsOrganization","setGithubActionsDefaultWorkflowPermissionsRepository","setGithubActionsPermissionsOrganization","setGithubActionsPermissionsRepository","setSelectedReposForOrgSecret","setSelectedRepositoriesEnabledGithubActionsOrganization","setWorkflowAccessToRepository","activity","checkRepoIsStarredByAuthenticatedUser","deleteRepoSubscription","deleteThreadSubscription","getFeeds","getRepoSubscription","getThread","getThreadSubscriptionForAuthenticatedUser","listEventsForAuthenticatedUser","listNotificationsForAuthenticatedUser","listOrgEventsForAuthenticatedUser","listPublicEvents","listPublicEventsForRepoNetwork","listPublicEventsForUser","listPublicOrgEvents","listReceivedEventsForUser","listReceivedPublicEventsForUser","listRepoEvents","listRepoNotificationsForAuthenticatedUser","listReposStarredByAuthenticatedUser","listReposStarredByUser","listReposWatchedByUser","listStargazersForRepo","listWatchedReposForAuthenticatedUser","listWatchersForRepo","markNotificationsAsRead","markRepoNotificationsAsRead","markThreadAsRead","setRepoSubscription","setThreadSubscription","starRepoForAuthenticatedUser","unstarRepoForAuthenticatedUser","apps","addRepoToInstallation","addRepoToInstallationForAuthenticatedUser","checkToken","createFromManifest","createInstallationAccessToken","deleteAuthorization","deleteInstallation","deleteToken","getAuthenticated","getBySlug","getInstallation","getOrgInstallation","getRepoInstallation","getSubscriptionPlanForAccount","getSubscriptionPlanForAccountStubbed","getUserInstallation","getWebhookConfigForApp","getWebhookDelivery","listAccountsForPlan","listAccountsForPlanStubbed","listInstallationReposForAuthenticatedUser","listInstallations","listInstallationsForAuthenticatedUser","listPlans","listPlansStubbed","listReposAccessibleToInstallation","listSubscriptionsForAuthenticatedUser","listSubscriptionsForAuthenticatedUserStubbed","listWebhookDeliveries","redeliverWebhookDelivery","removeRepoFromInstallation","removeRepoFromInstallationForAuthenticatedUser","resetToken","revokeInstallationAccessToken","scopeToken","suspendInstallation","unsuspendInstallation","updateWebhookConfigForApp","billing","getGithubActionsBillingOrg","getGithubActionsBillingUser","getGithubAdvancedSecurityBillingGhe","getGithubAdvancedSecurityBillingOrg","getGithubPackagesBillingOrg","getGithubPackagesBillingUser","getSharedStorageBillingOrg","getSharedStorageBillingUser","checks","create","createSuite","get","getSuite","listAnnotations","listForRef","listForSuite","listSuitesForRef","rerequestRun","rerequestSuite","setSuitesPreferences","update","codeScanning","deleteAnalysis","getAlert","renamedParameters","alert_id","getAnalysis","getCodeqlDatabase","getSarif","listAlertInstances","listAlertsForEnterprise","listAlertsForOrg","listAlertsForRepo","listAlertsInstances","listCodeqlDatabases","listRecentAnalyses","updateAlert","uploadSarif","codesOfConduct","getAllCodesOfConduct","getConductCode","codespaces","addRepositoryForSecretForAuthenticatedUser","codespaceMachinesForAuthenticatedUser","createForAuthenticatedUser","createOrUpdateSecretForAuthenticatedUser","createWithPrForAuthenticatedUser","createWithRepoForAuthenticatedUser","deleteForAuthenticatedUser","deleteFromOrganization","deleteSecretForAuthenticatedUser","exportForAuthenticatedUser","getExportDetailsForAuthenticatedUser","getForAuthenticatedUser","getPublicKeyForAuthenticatedUser","getSecretForAuthenticatedUser","listDevcontainersInRepositoryForAuthenticatedUser","listForAuthenticatedUser","listInOrganization","org_id","listInRepositoryForAuthenticatedUser","listRepositoriesForSecretForAuthenticatedUser","listSecretsForAuthenticatedUser","preFlightWithRepoForAuthenticatedUser","removeRepositoryForSecretForAuthenticatedUser","repoMachinesForAuthenticatedUser","setRepositoriesForSecretForAuthenticatedUser","startForAuthenticatedUser","stopForAuthenticatedUser","stopInOrganization","updateForAuthenticatedUser","dependabot","dependencyGraph","createRepositorySnapshot","diffRange","emojis","enterpriseAdmin","addCustomLabelsToSelfHostedRunnerForEnterprise","disableSelectedOrganizationGithubActionsEnterprise","enableSelectedOrganizationGithubActionsEnterprise","getAllowedActionsEnterprise","getGithubActionsPermissionsEnterprise","getServerStatistics","listLabelsForSelfHostedRunnerForEnterprise","listSelectedOrganizationsEnabledGithubActionsEnterprise","removeAllCustomLabelsFromSelfHostedRunnerForEnterprise","removeCustomLabelFromSelfHostedRunnerForEnterprise","setAllowedActionsEnterprise","setCustomLabelsForSelfHostedRunnerForEnterprise","setGithubActionsPermissionsEnterprise","setSelectedOrganizationsEnabledGithubActionsEnterprise","gists","checkIsStarred","createComment","delete","deleteComment","fork","getComment","getRevision","list","listComments","listCommits","listForUser","listForks","listPublic","listStarred","star","unstar","updateComment","git","createBlob","createCommit","createRef","createTag","createTree","deleteRef","getBlob","getCommit","getRef","getTag","getTree","listMatchingRefs","updateRef","gitignore","getAllTemplates","getTemplate","interactions","getRestrictionsForAuthenticatedUser","getRestrictionsForOrg","getRestrictionsForRepo","getRestrictionsForYourPublicRepos","removeRestrictionsForAuthenticatedUser","removeRestrictionsForOrg","removeRestrictionsForRepo","removeRestrictionsForYourPublicRepos","setRestrictionsForAuthenticatedUser","setRestrictionsForOrg","setRestrictionsForRepo","setRestrictionsForYourPublicRepos","issues","addAssignees","addLabels","checkUserCanBeAssigned","createLabel","createMilestone","deleteLabel","deleteMilestone","getEvent","getLabel","getMilestone","listAssignees","listCommentsForRepo","listEvents","listEventsForRepo","listEventsForTimeline","listForOrg","listForRepo","listLabelsForMilestone","listLabelsForRepo","listLabelsOnIssue","listMilestones","lock","removeAllLabels","removeAssignees","removeLabel","setLabels","unlock","updateLabel","updateMilestone","licenses","getAllCommonlyUsed","getForRepo","markdown","render","renderRaw","headers","meta","getOctocat","getZen","root","migrations","cancelImport","deleteArchiveForAuthenticatedUser","deleteArchiveForOrg","downloadArchiveForOrg","getArchiveForAuthenticatedUser","getCommitAuthors","getImportStatus","getLargeFiles","getStatusForAuthenticatedUser","getStatusForOrg","listReposForAuthenticatedUser","listReposForOrg","listReposForUser","mapCommitAuthor","setLfsPreference","startForOrg","startImport","unlockRepoForAuthenticatedUser","unlockRepoForOrg","updateImport","orgs","addSecurityManagerTeam","blockUser","cancelInvitation","checkBlockedUser","checkMembershipForUser","checkPublicMembershipForUser","convertMemberToOutsideCollaborator","createCustomRole","createInvitation","createWebhook","deleteCustomRole","deleteWebhook","enableOrDisableSecurityProductOnAllOrgRepos","getMembershipForAuthenticatedUser","getMembershipForUser","getWebhook","getWebhookConfigForOrg","listAppInstallations","listBlockedUsers","listCustomRoles","listFailedInvitations","listFineGrainedPermissions","listInvitationTeams","listMembers","listMembershipsForAuthenticatedUser","listOutsideCollaborators","listPendingInvitations","listPublicMembers","listSecurityManagerTeams","listWebhooks","pingWebhook","removeMember","removeMembershipForUser","removeOutsideCollaborator","removePublicMembershipForAuthenticatedUser","removeSecurityManagerTeam","setMembershipForUser","setPublicMembershipForAuthenticatedUser","unblockUser","updateCustomRole","updateMembershipForAuthenticatedUser","updateWebhook","updateWebhookConfigForOrg","packages","deletePackageForAuthenticatedUser","deletePackageForOrg","deletePackageForUser","deletePackageVersionForAuthenticatedUser","deletePackageVersionForOrg","deletePackageVersionForUser","getAllPackageVersionsForAPackageOwnedByAnOrg","getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser","getAllPackageVersionsForPackageOwnedByAuthenticatedUser","getAllPackageVersionsForPackageOwnedByOrg","getAllPackageVersionsForPackageOwnedByUser","getPackageForAuthenticatedUser","getPackageForOrganization","getPackageForUser","getPackageVersionForAuthenticatedUser","getPackageVersionForOrganization","getPackageVersionForUser","listPackagesForAuthenticatedUser","listPackagesForOrganization","listPackagesForUser","restorePackageForAuthenticatedUser","restorePackageForOrg","restorePackageForUser","restorePackageVersionForAuthenticatedUser","restorePackageVersionForOrg","restorePackageVersionForUser","projects","addCollaborator","createCard","createColumn","createForOrg","createForRepo","deleteCard","deleteColumn","getCard","getColumn","getPermissionForUser","listCards","listCollaborators","listColumns","moveCard","moveColumn","removeCollaborator","updateCard","updateColumn","pulls","checkIfMerged","createReplyForReviewComment","createReview","createReviewComment","deletePendingReview","deleteReviewComment","dismissReview","getReview","getReviewComment","listCommentsForReview","listFiles","listRequestedReviewers","listReviewComments","listReviewCommentsForRepo","listReviews","merge","removeRequestedReviewers","requestReviewers","submitReview","updateBranch","updateReview","updateReviewComment","rateLimit","reactions","createForCommitComment","createForIssue","createForIssueComment","createForPullRequestReviewComment","createForRelease","createForTeamDiscussionCommentInOrg","createForTeamDiscussionInOrg","deleteForCommitComment","deleteForIssue","deleteForIssueComment","deleteForPullRequestComment","deleteForRelease","deleteForTeamDiscussion","deleteForTeamDiscussionComment","listForCommitComment","listForIssue","listForIssueComment","listForPullRequestReviewComment","listForRelease","listForTeamDiscussionCommentInOrg","listForTeamDiscussionInOrg","repos","acceptInvitation","acceptInvitationForAuthenticatedUser","addAppAccessRestrictions","mapToData","addStatusCheckContexts","addTeamAccessRestrictions","addUserAccessRestrictions","checkCollaborator","checkVulnerabilityAlerts","codeownersErrors","compareCommits","compareCommitsWithBasehead","createAutolink","createCommitComment","createCommitSignatureProtection","createCommitStatus","createDeployKey","createDeployment","createDeploymentBranchPolicy","createDeploymentStatus","createDispatchEvent","createFork","createInOrg","createOrUpdateEnvironment","createOrUpdateFileContents","createPagesDeployment","createPagesSite","createRelease","createTagProtection","createUsingTemplate","declineInvitation","declineInvitationForAuthenticatedUser","deleteAccessRestrictions","deleteAdminBranchProtection","deleteAnEnvironment","deleteAutolink","deleteBranchProtection","deleteCommitComment","deleteCommitSignatureProtection","deleteDeployKey","deleteDeployment","deleteDeploymentBranchPolicy","deleteFile","deleteInvitation","deletePagesSite","deletePullRequestReviewProtection","deleteRelease","deleteReleaseAsset","deleteTagProtection","disableAutomatedSecurityFixes","disableLfsForRepo","disableVulnerabilityAlerts","downloadArchive","downloadTarballArchive","downloadZipballArchive","enableAutomatedSecurityFixes","enableLfsForRepo","enableVulnerabilityAlerts","generateReleaseNotes","getAccessRestrictions","getAdminBranchProtection","getAllEnvironments","getAllStatusCheckContexts","getAllTopics","getAppsWithAccessToProtectedBranch","getAutolink","getBranch","getBranchProtection","getClones","getCodeFrequencyStats","getCollaboratorPermissionLevel","getCombinedStatusForRef","getCommitActivityStats","getCommitComment","getCommitSignatureProtection","getCommunityProfileMetrics","getContent","getContributorsStats","getDeployKey","getDeployment","getDeploymentBranchPolicy","getDeploymentStatus","getEnvironment","getLatestPagesBuild","getLatestRelease","getPages","getPagesBuild","getPagesHealthCheck","getParticipationStats","getPullRequestReviewProtection","getPunchCardStats","getReadme","getReadmeInDirectory","getRelease","getReleaseAsset","getReleaseByTag","getStatusChecksProtection","getTeamsWithAccessToProtectedBranch","getTopPaths","getTopReferrers","getUsersWithAccessToProtectedBranch","getViews","getWebhookConfigForRepo","listAutolinks","listBranches","listBranchesForHeadCommit","listCommentsForCommit","listCommitCommentsForRepo","listCommitStatusesForRef","listContributors","listDeployKeys","listDeploymentBranchPolicies","listDeploymentStatuses","listDeployments","listInvitations","listInvitationsForAuthenticatedUser","listLanguages","listPagesBuilds","listPullRequestsAssociatedWithCommit","listReleaseAssets","listReleases","listTagProtection","listTags","listTeams","mergeUpstream","removeAppAccessRestrictions","removeStatusCheckContexts","removeStatusCheckProtection","removeTeamAccessRestrictions","removeUserAccessRestrictions","renameBranch","replaceAllTopics","requestPagesBuild","setAdminBranchProtection","setAppAccessRestrictions","setStatusCheckContexts","setTeamAccessRestrictions","setUserAccessRestrictions","testPushWebhook","transfer","updateBranchProtection","updateCommitComment","updateDeploymentBranchPolicy","updateInformationAboutPagesSite","updateInvitation","updatePullRequestReviewProtection","updateRelease","updateReleaseAsset","updateStatusCheckPotection","updateStatusCheckProtection","updateWebhookConfigForRepo","uploadReleaseAsset","baseUrl","search","code","commits","issuesAndPullRequests","labels","topics","users","secretScanning","listLocationsForAlert","teams","addOrUpdateMembershipForUserInOrg","addOrUpdateProjectPermissionsInOrg","addOrUpdateRepoPermissionsInOrg","checkPermissionsForProjectInOrg","checkPermissionsForRepoInOrg","createDiscussionCommentInOrg","createDiscussionInOrg","deleteDiscussionCommentInOrg","deleteDiscussionInOrg","deleteInOrg","getByName","getDiscussionCommentInOrg","getDiscussionInOrg","getMembershipForUserInOrg","listChildInOrg","listDiscussionCommentsInOrg","listDiscussionsInOrg","listMembersInOrg","listPendingInvitationsInOrg","listProjectsInOrg","listReposInOrg","removeMembershipForUserInOrg","removeProjectInOrg","removeRepoInOrg","updateDiscussionCommentInOrg","updateDiscussionInOrg","updateInOrg","addEmailForAuthenticated","addEmailForAuthenticatedUser","block","checkBlocked","checkFollowingForUser","checkPersonIsFollowedByAuthenticated","createGpgKeyForAuthenticated","createGpgKeyForAuthenticatedUser","createPublicSshKeyForAuthenticated","createPublicSshKeyForAuthenticatedUser","createSshSigningKeyForAuthenticatedUser","deleteEmailForAuthenticated","deleteEmailForAuthenticatedUser","deleteGpgKeyForAuthenticated","deleteGpgKeyForAuthenticatedUser","deletePublicSshKeyForAuthenticated","deletePublicSshKeyForAuthenticatedUser","deleteSshSigningKeyForAuthenticatedUser","follow","getByUsername","getContextForUser","getGpgKeyForAuthenticated","getGpgKeyForAuthenticatedUser","getPublicSshKeyForAuthenticated","getPublicSshKeyForAuthenticatedUser","getSshSigningKeyForAuthenticatedUser","listBlockedByAuthenticated","listBlockedByAuthenticatedUser","listEmailsForAuthenticated","listEmailsForAuthenticatedUser","listFollowedByAuthenticated","listFollowedByAuthenticatedUser","listFollowersForAuthenticatedUser","listFollowersForUser","listFollowingForUser","listGpgKeysForAuthenticated","listGpgKeysForAuthenticatedUser","listGpgKeysForUser","listPublicEmailsForAuthenticated","listPublicEmailsForAuthenticatedUser","listPublicKeysForUser","listPublicSshKeysForAuthenticated","listPublicSshKeysForAuthenticatedUser","listSshSigningKeysForAuthenticatedUser","listSshSigningKeysForUser","setPrimaryEmailVisibilityForAuthenticated","setPrimaryEmailVisibilityForAuthenticatedUser","unblock","unfollow","updateAuthenticated","VERSION","endpointsToMethods","octokit","endpointsMap","newMethods","scope","endpoints","Object","entries","methodName","endpoint","route","defaults","decorations","method","url","split","endpointDefaults","assign","scopeMethods","decorate","request","requestWithDefaults","withDecorations","args","options","data","undefined","newScope","newMethodName","log","warn","deprecated","name","alias","restEndpointMethods","api","ENDPOINTS","rest","legacyRestEndpointMethods"],"mappings":"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"}