{"version":3,"file":"index.js","sources":["../dist-src/version.js","../dist-src/normalize-paginated-list-response.js","../dist-src/iterator.js","../dist-src/paginate.js","../dist-src/compose-paginate.js","../dist-src/generated/paginating-endpoints.js","../dist-src/paginating-endpoints.js","../dist-src/index.js"],"sourcesContent":["export const VERSION = \"5.0.1\";\n","/**\n * Some “list” response that can be paginated have a different response structure\n *\n * They have a `total_count` key in the response (search also has `incomplete_results`,\n * /installation/repositories also has `repository_selection`), as well as a key with\n * the list of the items which name varies from endpoint to endpoint.\n *\n * Octokit normalizes these responses so that paginated results are always returned following\n * the same structure. One challenge is that if the list response has only one page, no Link\n * header is provided, so this header alone is not sufficient to check wether a response is\n * paginated or not.\n *\n * We check if a \"total_count\" key is present in the response data, but also make sure that\n * a \"url\" property is not, as the \"Get the combined status for a specific ref\" endpoint would\n * otherwise match: https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref\n */\nexport function normalizePaginatedListResponse(response) {\n    // endpoints can respond with 204 if repository is empty\n    if (!response.data) {\n        return {\n            ...response,\n            data: [],\n        };\n    }\n    const responseNeedsNormalization = \"total_count\" in response.data && !(\"url\" in response.data);\n    if (!responseNeedsNormalization)\n        return response;\n    // keep the additional properties intact as there is currently no other way\n    // to retrieve the same information.\n    const incompleteResults = response.data.incomplete_results;\n    const repositorySelection = response.data.repository_selection;\n    const totalCount = response.data.total_count;\n    delete response.data.incomplete_results;\n    delete response.data.repository_selection;\n    delete response.data.total_count;\n    const namespaceKey = Object.keys(response.data)[0];\n    const data = response.data[namespaceKey];\n    response.data = data;\n    if (typeof incompleteResults !== \"undefined\") {\n        response.data.incomplete_results = incompleteResults;\n    }\n    if (typeof repositorySelection !== \"undefined\") {\n        response.data.repository_selection = repositorySelection;\n    }\n    response.data.total_count = totalCount;\n    return response;\n}\n","import { normalizePaginatedListResponse } from \"./normalize-paginated-list-response\";\nexport function iterator(octokit, route, parameters) {\n    const options = typeof route === \"function\"\n        ? route.endpoint(parameters)\n        : octokit.request.endpoint(route, parameters);\n    const requestMethod = typeof route === \"function\" ? route : octokit.request;\n    const method = options.method;\n    const headers = options.headers;\n    let url = options.url;\n    return {\n        [Symbol.asyncIterator]: () => ({\n            async next() {\n                if (!url)\n                    return { done: true };\n                try {\n                    const response = await requestMethod({ method, url, headers });\n                    const normalizedResponse = normalizePaginatedListResponse(response);\n                    // `response.headers.link` format:\n                    // '<https://api.github.com/users/aseemk/followers?page=2>; rel=\"next\", <https://api.github.com/users/aseemk/followers?page=2>; rel=\"last\"'\n                    // sets `url` to undefined if \"next\" URL is not present or `link` header is not set\n                    url = ((normalizedResponse.headers.link || \"\").match(/<([^>]+)>;\\s*rel=\"next\"/) || [])[1];\n                    return { value: normalizedResponse };\n                }\n                catch (error) {\n                    if (error.status !== 409)\n                        throw error;\n                    url = \"\";\n                    return {\n                        value: {\n                            status: 200,\n                            headers: {},\n                            data: [],\n                        },\n                    };\n                }\n            },\n        }),\n    };\n}\n","import { iterator } from \"./iterator\";\nexport function paginate(octokit, route, parameters, mapFn) {\n    if (typeof parameters === \"function\") {\n        mapFn = parameters;\n        parameters = undefined;\n    }\n    return gather(octokit, [], iterator(octokit, route, parameters)[Symbol.asyncIterator](), mapFn);\n}\nfunction gather(octokit, results, iterator, mapFn) {\n    return iterator.next().then((result) => {\n        if (result.done) {\n            return results;\n        }\n        let earlyExit = false;\n        function done() {\n            earlyExit = true;\n        }\n        results = results.concat(mapFn ? mapFn(result.value, done) : result.value.data);\n        if (earlyExit) {\n            return results;\n        }\n        return gather(octokit, results, iterator, mapFn);\n    });\n}\n","import { paginate } from \"./paginate\";\nimport { iterator } from \"./iterator\";\nexport const composePaginateRest = Object.assign(paginate, {\n    iterator,\n});\n","export const paginatingEndpoints = [\n    \"GET /app/hook/deliveries\",\n    \"GET /app/installations\",\n    \"GET /enterprises/{enterprise}/actions/permissions/organizations\",\n    \"GET /enterprises/{enterprise}/actions/runner-groups\",\n    \"GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations\",\n    \"GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners\",\n    \"GET /enterprises/{enterprise}/actions/runners\",\n    \"GET /enterprises/{enterprise}/code-scanning/alerts\",\n    \"GET /enterprises/{enterprise}/secret-scanning/alerts\",\n    \"GET /enterprises/{enterprise}/settings/billing/advanced-security\",\n    \"GET /events\",\n    \"GET /gists\",\n    \"GET /gists/public\",\n    \"GET /gists/starred\",\n    \"GET /gists/{gist_id}/comments\",\n    \"GET /gists/{gist_id}/commits\",\n    \"GET /gists/{gist_id}/forks\",\n    \"GET /installation/repositories\",\n    \"GET /issues\",\n    \"GET /licenses\",\n    \"GET /marketplace_listing/plans\",\n    \"GET /marketplace_listing/plans/{plan_id}/accounts\",\n    \"GET /marketplace_listing/stubbed/plans\",\n    \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n    \"GET /networks/{owner}/{repo}/events\",\n    \"GET /notifications\",\n    \"GET /organizations\",\n    \"GET /organizations/{org}/codespaces/secrets\",\n    \"GET /organizations/{org}/codespaces/secrets/{secret_name}/repositories\",\n    \"GET /orgs/{org}/actions/cache/usage-by-repository\",\n    \"GET /orgs/{org}/actions/permissions/repositories\",\n    \"GET /orgs/{org}/actions/runner-groups\",\n    \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories\",\n    \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners\",\n    \"GET /orgs/{org}/actions/runners\",\n    \"GET /orgs/{org}/actions/secrets\",\n    \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\",\n    \"GET /orgs/{org}/blocks\",\n    \"GET /orgs/{org}/code-scanning/alerts\",\n    \"GET /orgs/{org}/codespaces\",\n    \"GET /orgs/{org}/dependabot/secrets\",\n    \"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\",\n    \"GET /orgs/{org}/events\",\n    \"GET /orgs/{org}/failed_invitations\",\n    \"GET /orgs/{org}/hooks\",\n    \"GET /orgs/{org}/hooks/{hook_id}/deliveries\",\n    \"GET /orgs/{org}/installations\",\n    \"GET /orgs/{org}/invitations\",\n    \"GET /orgs/{org}/invitations/{invitation_id}/teams\",\n    \"GET /orgs/{org}/issues\",\n    \"GET /orgs/{org}/members\",\n    \"GET /orgs/{org}/migrations\",\n    \"GET /orgs/{org}/migrations/{migration_id}/repositories\",\n    \"GET /orgs/{org}/outside_collaborators\",\n    \"GET /orgs/{org}/packages\",\n    \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\",\n    \"GET /orgs/{org}/projects\",\n    \"GET /orgs/{org}/public_members\",\n    \"GET /orgs/{org}/repos\",\n    \"GET /orgs/{org}/secret-scanning/alerts\",\n    \"GET /orgs/{org}/settings/billing/advanced-security\",\n    \"GET /orgs/{org}/teams\",\n    \"GET /orgs/{org}/teams/{team_slug}/discussions\",\n    \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\",\n    \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n    \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\",\n    \"GET /orgs/{org}/teams/{team_slug}/invitations\",\n    \"GET /orgs/{org}/teams/{team_slug}/members\",\n    \"GET /orgs/{org}/teams/{team_slug}/projects\",\n    \"GET /orgs/{org}/teams/{team_slug}/repos\",\n    \"GET /orgs/{org}/teams/{team_slug}/teams\",\n    \"GET /projects/columns/{column_id}/cards\",\n    \"GET /projects/{project_id}/collaborators\",\n    \"GET /projects/{project_id}/columns\",\n    \"GET /repos/{owner}/{repo}/actions/artifacts\",\n    \"GET /repos/{owner}/{repo}/actions/caches\",\n    \"GET /repos/{owner}/{repo}/actions/runners\",\n    \"GET /repos/{owner}/{repo}/actions/runs\",\n    \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\",\n    \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\",\n    \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\",\n    \"GET /repos/{owner}/{repo}/actions/secrets\",\n    \"GET /repos/{owner}/{repo}/actions/workflows\",\n    \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\",\n    \"GET /repos/{owner}/{repo}/assignees\",\n    \"GET /repos/{owner}/{repo}/branches\",\n    \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\",\n    \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\",\n    \"GET /repos/{owner}/{repo}/code-scanning/alerts\",\n    \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\",\n    \"GET /repos/{owner}/{repo}/code-scanning/analyses\",\n    \"GET /repos/{owner}/{repo}/codespaces\",\n    \"GET /repos/{owner}/{repo}/codespaces/devcontainers\",\n    \"GET /repos/{owner}/{repo}/codespaces/secrets\",\n    \"GET /repos/{owner}/{repo}/collaborators\",\n    \"GET /repos/{owner}/{repo}/comments\",\n    \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\",\n    \"GET /repos/{owner}/{repo}/commits\",\n    \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\",\n    \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\",\n    \"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\",\n    \"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\",\n    \"GET /repos/{owner}/{repo}/commits/{ref}/status\",\n    \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\",\n    \"GET /repos/{owner}/{repo}/contributors\",\n    \"GET /repos/{owner}/{repo}/dependabot/alerts\",\n    \"GET /repos/{owner}/{repo}/dependabot/secrets\",\n    \"GET /repos/{owner}/{repo}/deployments\",\n    \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\",\n    \"GET /repos/{owner}/{repo}/environments\",\n    \"GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies\",\n    \"GET /repos/{owner}/{repo}/events\",\n    \"GET /repos/{owner}/{repo}/forks\",\n    \"GET /repos/{owner}/{repo}/hooks\",\n    \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\",\n    \"GET /repos/{owner}/{repo}/invitations\",\n    \"GET /repos/{owner}/{repo}/issues\",\n    \"GET /repos/{owner}/{repo}/issues/comments\",\n    \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\",\n    \"GET /repos/{owner}/{repo}/issues/events\",\n    \"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\",\n    \"GET /repos/{owner}/{repo}/issues/{issue_number}/events\",\n    \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\",\n    \"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\",\n    \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\",\n    \"GET /repos/{owner}/{repo}/keys\",\n    \"GET /repos/{owner}/{repo}/labels\",\n    \"GET /repos/{owner}/{repo}/milestones\",\n    \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\",\n    \"GET /repos/{owner}/{repo}/notifications\",\n    \"GET /repos/{owner}/{repo}/pages/builds\",\n    \"GET /repos/{owner}/{repo}/projects\",\n    \"GET /repos/{owner}/{repo}/pulls\",\n    \"GET /repos/{owner}/{repo}/pulls/comments\",\n    \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\",\n    \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\",\n    \"GET /repos/{owner}/{repo}/releases\",\n    \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\",\n    \"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\",\n    \"GET /repos/{owner}/{repo}/secret-scanning/alerts\",\n    \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\",\n    \"GET /repos/{owner}/{repo}/stargazers\",\n    \"GET /repos/{owner}/{repo}/subscribers\",\n    \"GET /repos/{owner}/{repo}/tags\",\n    \"GET /repos/{owner}/{repo}/teams\",\n    \"GET /repos/{owner}/{repo}/topics\",\n    \"GET /repositories\",\n    \"GET /repositories/{repository_id}/environments/{environment_name}/secrets\",\n    \"GET /search/code\",\n    \"GET /search/commits\",\n    \"GET /search/issues\",\n    \"GET /search/labels\",\n    \"GET /search/repositories\",\n    \"GET /search/topics\",\n    \"GET /search/users\",\n    \"GET /teams/{team_id}/discussions\",\n    \"GET /teams/{team_id}/discussions/{discussion_number}/comments\",\n    \"GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions\",\n    \"GET /teams/{team_id}/discussions/{discussion_number}/reactions\",\n    \"GET /teams/{team_id}/invitations\",\n    \"GET /teams/{team_id}/members\",\n    \"GET /teams/{team_id}/projects\",\n    \"GET /teams/{team_id}/repos\",\n    \"GET /teams/{team_id}/teams\",\n    \"GET /user/blocks\",\n    \"GET /user/codespaces\",\n    \"GET /user/codespaces/secrets\",\n    \"GET /user/emails\",\n    \"GET /user/followers\",\n    \"GET /user/following\",\n    \"GET /user/gpg_keys\",\n    \"GET /user/installations\",\n    \"GET /user/installations/{installation_id}/repositories\",\n    \"GET /user/issues\",\n    \"GET /user/keys\",\n    \"GET /user/marketplace_purchases\",\n    \"GET /user/marketplace_purchases/stubbed\",\n    \"GET /user/memberships/orgs\",\n    \"GET /user/migrations\",\n    \"GET /user/migrations/{migration_id}/repositories\",\n    \"GET /user/orgs\",\n    \"GET /user/packages\",\n    \"GET /user/packages/{package_type}/{package_name}/versions\",\n    \"GET /user/public_emails\",\n    \"GET /user/repos\",\n    \"GET /user/repository_invitations\",\n    \"GET /user/ssh_signing_keys\",\n    \"GET /user/starred\",\n    \"GET /user/subscriptions\",\n    \"GET /user/teams\",\n    \"GET /users\",\n    \"GET /users/{username}/events\",\n    \"GET /users/{username}/events/orgs/{org}\",\n    \"GET /users/{username}/events/public\",\n    \"GET /users/{username}/followers\",\n    \"GET /users/{username}/following\",\n    \"GET /users/{username}/gists\",\n    \"GET /users/{username}/gpg_keys\",\n    \"GET /users/{username}/keys\",\n    \"GET /users/{username}/orgs\",\n    \"GET /users/{username}/packages\",\n    \"GET /users/{username}/projects\",\n    \"GET /users/{username}/received_events\",\n    \"GET /users/{username}/received_events/public\",\n    \"GET /users/{username}/repos\",\n    \"GET /users/{username}/ssh_signing_keys\",\n    \"GET /users/{username}/starred\",\n    \"GET /users/{username}/subscriptions\",\n];\n","import { paginatingEndpoints, } from \"./generated/paginating-endpoints\";\nexport { paginatingEndpoints } from \"./generated/paginating-endpoints\";\nexport function isPaginatingEndpoint(arg) {\n    if (typeof arg === \"string\") {\n        return paginatingEndpoints.includes(arg);\n    }\n    else {\n        return false;\n    }\n}\n","import { VERSION } from \"./version\";\nimport { paginate } from \"./paginate\";\nimport { iterator } from \"./iterator\";\nexport { composePaginateRest } from \"./compose-paginate\";\nexport { isPaginatingEndpoint, paginatingEndpoints, } from \"./paginating-endpoints\";\n/**\n * @param octokit Octokit instance\n * @param options Options passed to Octokit constructor\n */\nexport function paginateRest(octokit) {\n    return {\n        paginate: Object.assign(paginate.bind(null, octokit), {\n            iterator: iterator.bind(null, octokit),\n        }),\n    };\n}\npaginateRest.VERSION = VERSION;\n"],"names":["VERSION","normalizePaginatedListResponse","response","data","responseNeedsNormalization","incompleteResults","incomplete_results","repositorySelection","repository_selection","totalCount","total_count","namespaceKey","Object","keys","iterator","octokit","route","parameters","options","endpoint","request","requestMethod","method","headers","url","Symbol","asyncIterator","next","done","normalizedResponse","link","match","value","error","status","paginate","mapFn","undefined","gather","results","then","result","earlyExit","concat","composePaginateRest","assign","paginatingEndpoints","isPaginatingEndpoint","arg","includes","paginateRest","bind"],"mappings":"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"}